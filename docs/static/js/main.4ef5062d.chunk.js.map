{"version":3,"sources":["services/api.js","components/Filters.js","components/CharacterDetail.js","components/CharacterCard.js","components/CharacterList.js","components/App.js","index.js"],"names":["translateCharacterInfo","character","species","status","getDataFromApi","fetch","then","response","json","data","results","characters","map","Filters","props","handleFilterNameChild","ev","preventDefault","handleFilters","key","target","id","value","action","htmlFor","type","filterName","onChange","name","filterSpecie","CharacterDetail","className","href","src","image","alt","specie","origin","episodes","length","to","CharacterCard","CharacterList","htmlCode","sort","a","b","App","useState","setCharacters","setFilterName","setFilterSpecie","isCharacterSpecie","containsCharacterName","toLowerCase","includes","useEffect","getApiData","exact","path","filter","render","routeCharacterId","parseInt","match","params","find","episode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4ef5062d.chunk.js","sourcesContent":["import { findAllInRenderedTree } from 'react-dom/test-utils';\n\nconst getDataFromApi = () => {\n  return fetch('https://rickandmortyapi.com/api/character/')\n    .then((response) => response.json())\n    .then((data) => data.results)\n    .then((characters) => characters.map(translateCharacterInfo));\n};\n\nfunction translateCharacterInfo(character) {\n  character.species = character.species === 'Human' ? 'Humano' : 'Alien';\n  character.status = character.status === 'Alive' ? 'Vivo' : 'Muerto';\n\n  return character;\n}\n\nexport default getDataFromApi;\n","import React from 'react';\n\nconst Filters = (props) => {\n  const handleFilterNameChild = (ev) => {\n    ev.preventDefault();\n    props.handleFilters({\n      key: ev.target.id,\n      value: ev.target.value,\n    });\n  };\n  return (\n    <form action=\"\">\n      <div>\n        <label htmlFor=\"filterName\">Busca tu personaje</label>\n        <input\n          type=\"text\"\n          id=\"filterName\"\n          value={props.filterName}\n          onChange={handleFilterNameChild}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"filterSpecie\">Busca por especie</label>\n        <select\n          name=\"filterSpecie\"\n          id=\"filterSpecie\"\n          value={props.filterSpecie}\n          onChange={handleFilterNameChild}\n        >\n          <option value=\"all\">Todos</option>\n          <option value=\"Humano\">Humano</option>\n          <option value=\"Alien\">Alien</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Filters;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = (props) => {\n  return (\n    <div className=\"modal\">\n      <header className=\"modal__header\">\n        <a href=\"/\">\n          <span className=\"modal__close--icon\"></span>\n        </a>\n      </header>\n      <section>\n        <img src={props.image} alt={props.name} />\n        <h2>{props.name}</h2>\n        <ul>\n          <li>{`Estado: ${props.status}`}</li>\n          <li>{`Especie: ${props.specie}`}</li>\n          <li>{`Planeta de origen: ${props.origin.name}`}</li>\n          <li>{`Nº de episodios: ${props.episodes.length}`}</li>\n        </ul>\n      </section>\n      <Link to=\"/\">\n        <button>Cerrar</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default CharacterDetail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CharacterCard = (props) => {\n  return (\n    <Link to={`/character/${props.id}`}>\n      <article>\n        <img src={props.image} alt={props.name} />\n        <h3>{props.name}</h3>\n        <p>{props.specie}</p>\n      </article>\n    </Link>\n  );\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\n\nconst CharacterList = (props) => {\n  if (props.characters.length === 0) {\n    const specie =\n      props.filterSpecie === 'all' ? 'personaje' : props.filterSpecie;\n    return (\n      <p>\n        {`No hay ningún ${specie} que coincida con la palabra ${props.filterName}`}\n      </p>\n    );\n  }\n  const htmlCode = props.characters\n    .sort(function (a, b) {\n      if (a.name > b.name) {\n        return 1;\n      }\n      if (a.name < b.name) {\n        return -1;\n      }\n      return 0;\n    })\n    .map((character) => {\n      return (\n        <CharacterCard\n          key={character.id}\n          id={character.id}\n          name={character.name}\n          image={character.image}\n          specie={character.species}\n        />\n      );\n    });\n  return <section>{htmlCode}</section>;\n};\n\nexport default CharacterList;\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport '../stylesheets/App.scss';\nimport getApiData from '../services/api';\n// import CharacterCard from './CharacterCard';\nimport Filters from './Filters';\nimport CharacterDetail from './CharacterDetail';\nimport CharacterList from './CharacterList';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterSpecie, setFilterSpecie] = useState('all');\n\n  useEffect(() => {\n    getApiData().then((data) => {\n      setCharacters(data);\n    });\n  }, []);\n\n  const handleFilters = (data) => {\n    if (data.key === 'filterName') {\n      setFilterName(data.value);\n    } else if (data.key === 'filterSpecie') {\n      setFilterSpecie(data.value);\n    }\n  };\n\n  const renderCharacterDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.id);\n    const character = characters.find(\n      (character) => character.id === routeCharacterId\n    );\n    if (!character) {\n      return <p>'Personaje no encontrado'</p>;\n    }\n    return (\n      <CharacterDetail\n        image={character.image}\n        name={character.name}\n        status={character.status}\n        specie={character.species}\n        origin={character.origin}\n        episodes={character.episode}\n      />\n    );\n  };\n\n  const renderFilteredCharacters = () => {\n    return characters.filter(containsCharacterName).filter(isCharacterSpecie);\n  };\n\n  function isCharacterSpecie(character) {\n    return filterSpecie === 'all' || character.species === filterSpecie;\n  }\n\n  function containsCharacterName(character) {\n    return character.name.toLowerCase().includes(filterName.toLowerCase());\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Rick & Morty</h1>\n      </header>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Filters\n            filterSpecie={filterSpecie}\n            filterName={filterName}\n            handleFilters={handleFilters}\n          />\n          <CharacterList\n            filterName={filterName}\n            filterSpecie={filterSpecie}\n            characters={renderFilteredCharacters()}\n          />\n        </Route>\n        <Route path=\"/character/:id\" render={renderCharacterDetail} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}