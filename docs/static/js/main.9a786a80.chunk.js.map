{"version":3,"sources":["images/notfound_image.png","images/Rick_and_Morty_logo.png","images/title_image.png","services/api.js","components/Filters.js","components/CharacterDetail.js","components/CharacterCard.js","components/CharacterList.js","components/Header.js","components/App.js","index.js"],"names":["module","exports","fetchCharacters","url","fetch","then","response","json","data","results","characters","map","selectRelevantData","translateCharacterInfo","character","specie","status","translateCharacterStatus","id","image","name","species","origin","episodes","episode","length","gender","getDataFromApi","a","Promise","all","promisesResult","concat","Filters","props","handleFilterNameChild","ev","preventDefault","handleFilters","key","target","value","className","onKeyDown","htmlFor","type","placeholder","filterName","onChange","filterSpecie","CharacterDetail","src","alt","to","specieIconClass","statusIconClass","CharacterCard","propTypes","PropTypes","string","number","CharacterList","notfound_image","htmlCode","sort","b","Header","Rick_and_Morty_logo","title_image","App","useState","setCharacters","setFilterName","setFilterSpecie","isCharacterSpecie","containsCharacterName","toLowerCase","includes","useEffect","getApiData","exact","path","filter","render","routeCharacterId","parseInt","match","params","find","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9a786a80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notfound_image.cb66f414.png\";","module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty_logo.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/title_image.779837d7.png\";","const getDataFromApi = async () => {\n  const promisesResult = await Promise.all([\n    fetchCharacters('https://rickandmortyapi.com/api/character/'),\n    fetchCharacters('https://rickandmortyapi.com/api/character/?page=2'),\n    fetchCharacters('https://rickandmortyapi.com/api/character/?page=3'),\n  ]);\n\n  return [].concat(...promisesResult);\n};\n\nfunction fetchCharacters(url) {\n  return fetch(url)\n    .then((response) => response.json())\n    .then((data) => data.results)\n    .then((characters) => characters.map(selectRelevantData))\n    .then((characters) => characters.map(translateCharacterInfo));\n}\n\nfunction translateCharacterInfo(character) {\n  character.specie = character.specie === 'Human' ? 'Humano' : 'Alien';\n  character.status = translateCharacterStatus(character);\n  return character;\n}\n\nfunction translateCharacterStatus(character) {\n  if (character.status === 'Alive') {\n    return 'Vivo';\n  }\n  if (character.status === 'Dead') {\n    return 'Muerto';\n  }\n  if (character.status === 'unknown') {\n    return 'Desconocido';\n  }\n}\n\nfunction selectRelevantData(character) {\n  return {\n    id: character.id,\n    image: character.image,\n    name: character.name,\n    status: character.status,\n    specie: character.species,\n    origin: character.origin.name,\n    episodes: character.episode.length,\n    gender: character.gender,\n  };\n}\n\nexport default getDataFromApi;\n/****************************\n Da error al ejecutar los test con export default y necesitamos module.exports.\n El problema es que con module.export da error al hacer el run docs.\n He tratado de averiguar el por qué, pero no lo he conseguido. Por tanto, dejo comentado\n el module.exports para poder revisarlo.\n ****************************/\n//module.exports = getDataFromApi;\n","import React from 'react';\n\nconst Filters = (props) => {\n  const handleFilterNameChild = (ev) => {\n    ev.preventDefault();\n    props.handleFilters({\n      key: ev.target.id,\n      value: ev.target.value,\n    });\n  };\n  const handleSubmit = (ev) => {\n    if (ev.key === 'Enter') {\n      ev.preventDefault();\n    }\n  };\n\n  return (\n    <form className=\"form__search\" onKeyDown={handleSubmit}>\n      <div>\n        <label htmlFor=\"filterName\"></label>\n        <input\n          className=\"input__search\"\n          type=\"text\"\n          placeholder=\"Escribe el nombre de un personaje\"\n          id=\"filterName\"\n          value={props.filterName}\n          onChange={handleFilterNameChild}\n        />\n      </div>\n      <div className=\"select__filter\">\n        <label htmlFor=\"filterSpecie\">Selecciona la especie </label>\n        <select\n          className=\"select__input\"\n          name=\"filterSpecie\"\n          id=\"filterSpecie\"\n          value={props.filterSpecie}\n          onChange={handleFilterNameChild}\n        >\n          <option value=\"all\">Todos</option>\n          <option value=\"Humano\">Humano</option>\n          <option value=\"Alien\">Alien</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Filters;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = (props) => {\n  return (\n    <div className=\"card__detail-container\">\n      <section className=\"card__container\">\n        <img src={props.image} alt={props.name} />\n        <div className=\"card__text\">\n          <div className=\"card__title\">\n            <h2>{props.name}</h2>\n          </div>\n          <ul>\n            <li>{`Estado: ${props.status}`}</li>\n            <li>{`Especie: ${props.specie}`}</li>\n            <li>{`Planeta de origen: ${props.origin}`}</li>\n            <li>{`Nº de episodios: ${props.episodes}`}</li>\n          </ul>\n        </div>\n      </section>\n      <Link className=\"btn__return\" to=\"/\">\n        <i className=\"fas fa-angle-left\"></i> Volver\n      </Link>\n    </div>\n  );\n};\n\nexport default CharacterDetail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CharacterCard = (props) => {\n  return (\n    <Link to={`/character/${props.id}`}>\n      <article>\n        <img className=\"character__img\" src={props.image} alt={props.name} />\n        <div className=\"character__container\">\n          <div className=\"character__text-container\">\n            <h3 className=\"character__title\">{props.name}</h3>\n            <span className=\"character__text\">{props.specie}</span>\n          </div>\n          <div className=\"character__icon\">\n            <span>\n              <i className={specieIconClass(props)}></i>\n            </span>\n            <span className=\"status__container\">\n              <i className={statusIconClass(props)}></i>\n            </span>{' '}\n          </div>\n        </div>\n      </article>\n    </Link>\n  );\n};\n\nfunction specieIconClass(props) {\n  if (props.specie === 'Alien') {\n    return 'fab fa-reddit-alien';\n  } else if (props.gender === 'Male') {\n    return 'fas fa-male';\n  } else {\n    return 'fas fa-female';\n  }\n}\n\nfunction statusIconClass(props) {\n  if (props.status === 'Muerto') {\n    return 'fas fa-skull-crossbones';\n  } else if (props.status === 'Vivo') {\n    return 'fas fa-heartbeat';\n  } else {\n    return 'fas fa-question';\n  }\n}\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport notfound_image from '../images/notfound_image.png';\nimport PropTypes from 'prop-types';\n\nconst CharacterList = (props) => {\n  if (props.characters.length === 0) {\n    const specie =\n      props.filterSpecie === 'all' ? 'personaje' : props.filterSpecie;\n    return (\n      <div className=\"container__notfound\">\n        <p className=\"container__notfound-text\">\n          {`No hay ningún ${specie} que coincida con el nombre ${props.filterName}`}\n        </p>\n        <div className=\"container__notfound-img\">\n          <img src={notfound_image} alt=\"no encontrado\" />\n        </div>\n      </div>\n    );\n  }\n  const htmlCode = props.characters\n    .sort(function (a, b) {\n      if (a.name > b.name) {\n        return 1;\n      }\n      if (a.name < b.name) {\n        return -1;\n      }\n      return 0;\n    })\n    .map((character) => {\n      return (\n        <li className=\"character__list\" key={character.id}>\n          <CharacterCard\n            key={character.id}\n            id={character.id}\n            name={character.name}\n            image={character.image}\n            specie={character.specie}\n            gender={character.gender}\n            status={character.status}\n          />\n        </li>\n      );\n    });\n  return <ul className=\"characters__container\">{htmlCode}</ul>;\n};\n\nCharacterCard.propTypes = {\n  name: PropTypes.string,\n  specie: PropTypes.string,\n  id: PropTypes.number,\n  gender: PropTypes.string,\n  status: PropTypes.string,\n};\n\nexport default CharacterList;\n","import React from 'react';\nimport Rick_and_Morty_logo from '../images/Rick_and_Morty_logo.png';\nimport title_image from '../images/title_image.png';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <Link to=\"/\">\n      <div className=\"header\">\n        <img\n          className=\"header__logo\"\n          src={Rick_and_Morty_logo}\n          alt=\"Rick and Morty\"\n        />\n        <img className=\"header__img\" src={title_image} alt=\"portal\" />{' '}\n      </div>\n    </Link>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport '../stylesheets/App.scss';\nimport getApiData from '../services/api';\nimport Filters from './Filters';\nimport CharacterDetail from './CharacterDetail';\nimport CharacterList from './CharacterList';\nimport Header from './Header';\nimport notfound_image from '../images/notfound_image.png';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterSpecie, setFilterSpecie] = useState('all');\n\n  useEffect(() => {\n    getApiData().then((data) => setCharacters(data));\n  }, []);\n\n  const handleFilters = (data) => {\n    if (data.key === 'filterName') {\n      setFilterName(data.value);\n    } else if (data.key === 'filterSpecie') {\n      setFilterSpecie(data.value);\n    }\n  };\n\n  const renderCharacterDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.id);\n    const character = characters.find(\n      (character) => character.id === routeCharacterId\n    );\n    if (!character) {\n      return (\n        <div className=\"container__character--notfound\">\n          <p className=\"route__character-notfound\">\n            El personaje que buscas no existe\n          </p>\n          <img src={notfound_image} alt=\"no encontrado\" />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <CharacterDetail\n          image={character.image}\n          name={character.name}\n          status={character.status}\n          specie={character.specie}\n          origin={character.origin}\n          episodes={character.episodes}\n        />\n      </div>\n    );\n  };\n\n  const renderFilteredCharacters = () => {\n    return characters.filter(containsCharacterName).filter(isCharacterSpecie);\n  };\n\n  function isCharacterSpecie(character) {\n    return filterSpecie === 'all' || character.specie === filterSpecie;\n  }\n\n  function containsCharacterName(character) {\n    return character.name.toLowerCase().includes(filterName.toLowerCase());\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Filters\n            filterSpecie={filterSpecie}\n            filterName={filterName}\n            handleFilters={handleFilters}\n          />\n          <CharacterList\n            filterName={filterName}\n            filterSpecie={filterSpecie}\n            characters={renderFilteredCharacters()}\n          />\n        </Route>\n        <Route path=\"/character/:id\" render={renderCharacterDetail} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}